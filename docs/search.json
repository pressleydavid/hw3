[
  {
    "objectID": "hw3.html",
    "href": "hw3.html",
    "title": "hw3.qmd",
    "section": "",
    "text": "load(\"hw2_list.rda\")"
  },
  {
    "objectID": "hw3.html#create-a-new-column-in-each-data-frame-named-status",
    "href": "hw3.html#create-a-new-column-in-each-data-frame-named-status",
    "title": "hw3.qmd",
    "section": "1. Create a new column in each data frame named status",
    "text": "1. Create a new column in each data frame named status\n\nbp_list[[\"treatment\"]]$status &lt;- character(20)\nbp_list[[\"placebo\"]]$status &lt;- character(10)"
  },
  {
    "objectID": "hw3.html#create-status-values-for-each-data-frame",
    "href": "hw3.html#create-status-values-for-each-data-frame",
    "title": "hw3.qmd",
    "section": "2. Create status values for each data frame",
    "text": "2. Create status values for each data frame\n\n#access data frame for brevity\ntrt_df &lt;- bp_list[[\"treatment\"]]\n\n#loop through rows\nfor (i in 1:nrow(trt_df)){\n    val &lt;- trt_df$post_bp[i]\n    if(val &lt;= 120){\n        trt_df$status[i] &lt;- \"optimal\"\n    }\n    else if(120 &lt; val && val &lt;= 130){\n        trt_df$status[i] &lt;- \"borderline\"\n    }\n    else if(val &gt; 130){\n        trt_df$status[i] &lt;- \"high\"   \n    }\n    else {\n        print(\"KABOOM!\")\n    }\n}\nbp_list[[\"treatment\"]] &lt;- trt_df\n\npbo_df &lt;- bp_list[[\"placebo\"]]\nfor (i in 1:nrow(pbo_df)){\n    val &lt;- pbo_df$post_bp[i]\n    if(val &lt;= 120){\n        pbo_df$status[i] &lt;- \"optimal\"\n    }\n    else if(120 &lt; val && val &lt;= 130){\n        pbo_df$status[i] &lt;- \"borderline\"\n    }\n    else if(val &gt; 130){\n        pbo_df$status[i] &lt;- \"high\"   \n    }\n    else {\n        print(\"KABOOM!\")\n    }\n}\nbp_list[[\"placebo\"]] &lt;- pbo_df"
  },
  {
    "objectID": "sumstats_by_trt.html",
    "href": "sumstats_by_trt.html",
    "title": "R Notebook",
    "section": "",
    "text": "load(\"hw2_list.rda\")\n\n\ncreate a nested List from df_names as levels/parent and numeric vars and sumstats\n\nattributes(bp_list)\n\n$names\n[1] \"treatment\" \"placebo\"  \n\ntypeof(bp_list)\n\n[1] \"list\"\n\nstr(bp_list)\n\nList of 2\n $ treatment:'data.frame':  20 obs. of  5 variables:\n  ..$ patient: chr [1:20] \"Subject_1\" \"Subject_2\" \"Subject_3\" \"Subject_4\" ...\n  ..$ pre_bp : num [1:20] 120 151 125 126 115 132 132 129 134 139 ...\n  ..$ post_bp: num [1:20] 127 145 135 122 115 122 123 126 126 129 ...\n  ..$ diff_bp: num [1:20] -7 6 -10 4 0 10 9 3 8 10 ...\n  ..$ normal : logi [1:20] FALSE FALSE FALSE FALSE TRUE FALSE ...\n $ placebo  :'data.frame':  10 obs. of  5 variables:\n  ..$ patient: chr [1:10] \"Subject_1\" \"Subject_2\" \"Subject_3\" \"Subject_4\" ...\n  ..$ pre_bp : num [1:10] 138 135 147 117 152 134 114 121 131 130\n  ..$ post_bp: num [1:10] 105 136 123 130 134 143 135 139 120 124\n  ..$ diff_bp: num [1:10] 33 -1 24 -13 18 -9 -21 -18 11 6\n  ..$ normal : logi [1:10] TRUE FALSE FALSE FALSE FALSE FALSE ...\n\nget_df_names &lt;- function(bp_list, stat = \"mean\"){\n    stat__ &lt;- get(stat)\n    df_names &lt;- list()\n    for(item in names(bp_list)){\n        df_names &lt;- append(df_names, item)\n        numeric_var_names &lt;- list()\n        df_stats &lt;- list()\n        for (j in bp_list){\n            numeric_var_names &lt;- append(numeric_var_names,(names(j)[sapply(j,is.numeric)]))\n            df_stats &lt;- append(df_stats, list(stat__(j$pre_bp), stat__(j$post_bp), stat__(j$diff_bp)))\n        }\n    } \n    return(list(df_names, numeric_var_names, df_stats))\n}\ndfnamestst &lt;- get_df_names(bp_list)\n\nAdd a new chunk by clicking the Insert Chunk button on the toolbar or by pressing Cmd+Option+I.\nWhen you save the notebook, an HTML file containing the code and output will be saved alongside it (click the Preview button or press Cmd+Shift+K to preview the HTML file).\nThe preview shows you a rendered HTML copy of the contents of the editor. Consequently, unlike Knit, Preview does not run any R code chunks. Instead, the output of the chunk when it was last run in the editor is displayed."
  },
  {
    "objectID": "hw3.html#checks",
    "href": "hw3.html#checks",
    "title": "hw3.qmd",
    "section": "Checks",
    "text": "Checks\n\nMean (Default)\n\ncalculate_stats(bp_list)\n\n$treatment\n  mean_pre_bp mean_post_bp mean_diff_bp\n1       131.6       125.95         5.65\n\n$placebo\n  mean_pre_bp mean_post_bp mean_diff_bp\n1       131.9        128.9            3\n\n\n\n\nStandard Deviation\n\ncalculate_stats(bp_list,\"sd\")\n\n$treatment\n  sd_pre_bp sd_post_bp sd_diff_bp\n1  8.702087   8.888046   10.85442\n\n$placebo\n  sd_pre_bp sd_post_bp sd_diff_bp\n1  12.24246   11.17984   18.47521\n\n\n\n\nMinimums\n\ncalculate_stats(bp_list,\"min\")\n\n$treatment\n  min_pre_bp min_post_bp min_diff_bp\n1        115         114         -24\n\n$placebo\n  min_pre_bp min_post_bp min_diff_bp\n1        114         105         -21\n\n\n\n\nMaximums\n\ncalculate_stats(bp_list,\"max\")\n\n$treatment\n  max_pre_bp max_post_bp max_diff_bp\n1        151         146          21\n\n$placebo\n  max_pre_bp max_post_bp max_diff_bp\n1        152         143          33\n\n\n\n\nVariance\n\ncalculate_stats(bp_list,\"var\")\n\n$treatment\n  var_pre_bp var_post_bp var_diff_bp\n1   75.72632    78.99737    117.8184\n\n$placebo\n  var_pre_bp var_post_bp var_diff_bp\n1   149.8778    124.9889    341.3333"
  }
]